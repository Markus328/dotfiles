#!/usr/bin/env bash
rootfs_dirs=("bin" "boot" "etc" "lib" "lib64" "opt" "root" "sbin" "srv" "usr" "var")
extra_volumes=("userdata")
system_dirs=("proc" "sys" "dev" "run" "tmp")
dtb_delta="/userdata/@workspace/dtb-delta" #### need real file system, not overlayfs
dummy_image_name="dummy-image-distrobox"
dummy_image_dirs=()
dummy_image_files=()

function get_user_subids() {
	for i in /etc/subuid /etc/subgid; do
		matching=("$(grep -E "^$USER:" $i)")
		if [[ "$matching" ]]; then
			echo $matching | cut -d':' -f2
		fi
	done
}

function choose_dummy_image_dirs() {
	for i in ${rootfs_dirs[@]}; do
		if [[ -d "/$i" && ! -L "/$i" ]]; then
			dummy_image_dirs+=("$i")
		else
			dummy_image_files+=("$i")
		fi
	done
}

function overlay_create_and_mount() {
	operation_dir="$dtb_delta/$box_name"
	sudo mkdir -p $operation_dir
	for i in ${dummy_image_dirs[@]}; do
		sudo mkdir -p $operation_dir/.overlay/work-$i
		sudo mkdir -p $operation_dir/.overlay/upper-$i
		sudo mkdir -p $operation_dir/.container/$i
		sudo mkdir -p $operation_dir/$i

		if ! mountpoint -q $operation_dir/$i >/dev/null; then
			sudo mount -t overlay overlay -o lowerdir=/$i,upperdir=$operation_dir/.overlay/upper-$i,workdir=$operation_dir/.overlay/work-$i $operation_dir/$i
			read -d"\n" -a offsets <<<"$(get_user_subids)"
			sudo bindfs -o suid --uid-offset=${offsets[0]} --gid-offset=${offsets[1]} $operation_dir/$i $operation_dir/.container/$i
		fi
	done
}
function dummy_image_create() {
	if ! podman image exists $dummy_image_name:1; then
		escape_dir=$(mktemp -d -p /tmp)
		tarball_dir=$(mktemp -d -p /tmp)
		for i in ${system_dirs[@]}; do
			mkdir $escape_dir/$i
		done
		for i in ${dummy_image_dirs[@]}; do
			mkdir $escape_dir/$i
		done
		for i in ${dummy_image_files[@]}; do
			sudo cp -Ppf /$i $escape_dir/$i
		done
		cd $escape_dir
		tar -cf $tarball_dir/$dummy_image_name.tar *
		podman image import $tarball_dir/$dummy_image_name.tar --message tag $dummy_image_name:1
	fi
}
function distrobox_invocation() {
	for i in ${dummy_image_dirs[@]}; do
		volume_mounts="${volume_mounts[@]} --volume $dtb_delta/$box_name/.container/$i:/$i"
	done
	for i in ${extra_volumes}; do
		volume_mounts="${volume_mounts[@]} --volume /$i:/$i"
	done
	distrobox create \
		$box_name \
		--image localhost/$dummy_image_name:1 \
		${volume_mounts[@]}

}
printf "###########################################################\n"
printf "                Distrobox Delta                               \n"
printf "###########################################################\n"
function main() {
	choose_dummy_image_dirs
	if ! podman container exists $box_name; then
		overlay_create_and_mount
		dummy_image_create
		distrobox_invocation
		distrobox enter $box_name
	else
		overlay_create_and_mount
		distrobox enter $box_name
	fi
}
if [ ! -z $1 ]; then
	box_name=$1
	main
else
	box_name="opensuse-vbox-delta"
	main
fi
